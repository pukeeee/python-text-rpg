"""
–ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞.
"""
import os
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ä–æ—É—Ç–µ—Ä –∑ –æ–±—Ä–æ–±–Ω–∏–∫–∞–º–∏
from presentation.telegram.handlers import router as handlers_router

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def start_bot():
    """
    –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞.
    """
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
    bot_token = os.getenv("BOT_TOKEN")
    if not bot_token:
        logger.error("BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è!")
        raise ValueError("BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

    bot = Bot(token=bot_token)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑ —Ñ–∞–π–ª—É handlers.py
    dp.include_router(handlers_router)

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        # –ü–æ—á–∏–Ω–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –æ–Ω–æ–≤–ª–µ–Ω—å
        await dp.start_polling(bot)
    finally:
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Å—ñ—é –±–æ—Ç–∞ –ø—Ä–∏ –∑—É–ø–∏–Ω—Ü—ñ
        await bot.session.close()

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞."""
    try:
        asyncio.run(start_bot())
    except (KeyboardInterrupt, SystemExit):
        logger.info("üëã –ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.")
    except ValueError as e:
        logger.critical(e)

# –¶–µ–π –±–ª–æ–∫ –Ω–µ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ,
# –∞–ª–µ –∑–∞–ª–∏—à–µ–Ω–∏–π –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—É—Å–∫—É —Ñ–∞–π–ª—É.
if __name__ == '__main__':
    main()
